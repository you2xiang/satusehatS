version: "3.8"

services:
  postgres:
    container_name: "satusehatservicedb"
    image: "postgres:16"
    environment:
      - "POSTGRES_DB=satusehatfhirservice"
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_USER=myuser"
    ports:
      - "5432:5432"
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true

  storage:
    image: ghcr.io/openzipkin/zipkin-elasticsearch7:${TAG:-latest}
    container_name: elasticsearch
    # Uncomment to expose the storage port for testing
    ports:
      - 9200:9200
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true
  # Use Elasticsearch instead of in-memory storage
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch:9200
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
    ports:
      - "9411:9411"
    depends_on:
      - storage
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true

  dependencies:
    image: ghcr.io/openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch
    depends_on:
      - storage
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    container_name: zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true

  broker1:
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker1
    hostname: broker1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker1:19092,EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true

  broker2:
    image: confluentinc/cp-kafka:7.5.2
    container_name: broker2
    hostname: broker2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker2:19093,EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true
